name: Build project and Send to the Cloud

on: [push, pull_request]


jobs:
  Build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
     
    steps:
    #Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      #cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      #Build
      - uses: game-ci/unity-builder@v2
        id: myBuildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          versioning: Semantic
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: TestGame-${{ matrix.targetPlatform }}
       #Output 
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.buildVersion }}
          path: build/${{ matrix.targetPlatform }}
        
         #upload to google drive
      - name: Upload build to Google Drive
        uses: Jodebu/upload-to-drive@master
        id: driveUpload
        with:
           target:  build/${{ matrix.targetPlatform }}
           name: Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.buildVersion }}
           credentials: ${{ secrets.CREDENTIALS }}
           folder: ${{ secrets.DRIVE_FOLDER_ID }}
   

  changelog:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.github_token }}
          

      - name: create release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
