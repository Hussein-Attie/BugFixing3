name: Build project

on: [push, pull_request]


jobs:
  Build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
     
    steps:
    #Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      #cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      #Build
      - uses: game-ci/unity-builder@v2
        id: myBuildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          versioning: Semantic
          targetPlatform: ${{ matrix.targetPlatform }}
       #Output 
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.buildVersion }}'
          path: build/${{ matrix.targetPlatform }}
        
         #download artifacts
      - uses: actions/download-artifact@v3
        id: download
        with:
         name: Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.buildVersion }}
         path: path/to/artifacts
         
      - name: CompressTheFinalResult
        uses: thedoctor0/zip-release@master
        with:
           filename: 'Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.buildVersion }}.zip'
       
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.myBuildStep.outputs.buildVersion }}.zip

          
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
